<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ziho Ro&#39;s Blog</title>
    <link>https://zihoro.github.io/post/</link>
    <description>Recent content in Posts on Ziho Ro&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 19 Dec 2019 22:22:00 +0800</lastBuildDate>
    
	<atom:link href="https://zihoro.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>服务平台之技术栈选择</title>
      <link>https://zihoro.github.io/post/service-platform/technology-stack/</link>
      <pubDate>Thu, 19 Dec 2019 22:22:00 +0800</pubDate>
      
      <guid>https://zihoro.github.io/post/service-platform/technology-stack/</guid>
      <description>想清楚大概结构之后，就可以选取合适的技术栈了。因为合适的技术栈可以解决很多已知问题，减少代码的开发量。如果自己开发，没有经历过大量的使用场景</description>
    </item>
    
    <item>
      <title>服务平台之业务分析与结构设计</title>
      <link>https://zihoro.github.io/post/service-platform/analysis/</link>
      <pubDate>Wed, 18 Dec 2019 21:56:48 +0800</pubDate>
      
      <guid>https://zihoro.github.io/post/service-platform/analysis/</guid>
      <description>前言 毕业以来，一直在公司做企业服务相关的开发，公司的系统从最开始的单订单系统+简单交易系统，到后面的单订单系统+多交易系统，再到后面的多订单</description>
    </item>
    
    <item>
      <title>实验之多线程： JIT 对共享变量读取的干扰</title>
      <link>https://zihoro.github.io/post/laboratory/multithreading-and-jit/</link>
      <pubDate>Tue, 17 Dec 2019 18:34:59 +0800</pubDate>
      
      <guid>https://zihoro.github.io/post/laboratory/multithreading-and-jit/</guid>
      <description>问题：多线程情况下，对非 volatile 的共享变量的改动，其他线程是否可见？ 第一轮测试 测试代码 public class MultiThreadJitTest { private static boolean flag = false; private static long num = 0; public static void main(String[] args) throws InterruptedException { long now = System.currentTimeMillis(); final Thread</description>
    </item>
    
    <item>
      <title>实验之 GC Roots：线程以及线程池的垃圾回收</title>
      <link>https://zihoro.github.io/post/laboratory/gc-roots-thread-pool/</link>
      <pubDate>Tue, 17 Dec 2019 18:34:41 +0800</pubDate>
      
      <guid>https://zihoro.github.io/post/laboratory/gc-roots-thread-pool/</guid>
      <description>问题一：当你创建一个线程池之后，往线程池扔一个任务之后，不持有该线程池，该线程池里的线程是否会被垃圾回收？ 测试代码 public class ThreadPoolGcTest { public static void main(String[] args) { int size =</description>
    </item>
    
  </channel>
</rss>